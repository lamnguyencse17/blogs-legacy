name: Deployment
on:
    push:
        branches:
            - main

env:
    RAILS_ENV: production
    REGISTRY: ghcr.io

jobs:
    lint:
        uses: ./.github/workflows/lint.yml

    migrate:
        needs: lint
        runs-on: ubuntu-latest
        env:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Install Ruby dependencies
              uses: ruby/setup-ruby@v1.146.0
              with:
                  bundler-cache: true
            - name: Migrate databases
              run: bin/rails db:migrate

    pre-deploy:
        runs-on: ubuntu-latest
        needs: migrate
        env:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Install Ruby dependencies
              uses: ruby/setup-ruby@v1.146.0
              with:
                  bundler-cache: true
            - name: Install Node dependencies
              uses: actions/setup-node@v3
              with:
                  node-version: 18
            - run: npm ci
            - name: Precompile assets
              run: bundle exec rake assets:precompile
            - name: Clean assets
              run: bundle exec rake assets:clean

    build-docker-arm64:
        permissions:
            contents: read
            packages: write
        needs: pre-deploy
        uses: ./.github/workflows/build-docker.yml
        with:
            tag: arm64
            image_name: ${{ github.repository }}
            runner: ARM64
        secrets:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}

    build-docker-amd64:
        permissions:
            contents: read
            packages: write
        needs: pre-deploy
        uses: ./.github/workflows/build-docker.yml
        with:
            tag: amd64
            image_name: ${{ github.repository }}
            runner: ubuntu-latest
        secrets:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}

    merge-docker-images:
        needs: [build-docker-arm64, build-docker-amd64]
        permissions:
            contents: read
            packages: write
        runs-on: ubuntu-latest
        env:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Log in to the Container registry
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ github.actor }}
                  registry: ${{ env.REGISTRY }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Merge Docker images
              run: |
                  docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ github.repository }}:main \
                    ${{ env.REGISTRY }}/${{ github.repository }}:amd64 \
                    ${{ env.REGISTRY }}/${{ github.repository }}:arm64
              env:
                  BUILDX_NO_DEFAULT_ATTESTATION: 1

    deploy-to-caprover:
        runs-on: ubuntu-latest
        needs: merge-docker-images
        steps:
            - name: Deploy App to CapRover
              uses: caprover/deploy-from-github@v1.1.2
              with:
                  server: '${{ secrets.CAPROVER_SERVER }}'
                  app: '${{ secrets.APP_NAME }}'
                  token: '${{ secrets.APP_TOKEN }}'
                  image: '${{ env.REGISTRY }}/${{ github.repository }}:main'
